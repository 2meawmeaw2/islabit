import React, { useEffect, useState } from "react";
import {
  View,
  Text,
  StyleSheet,
  TouchableOpacity,
  SafeAreaView,
  StatusBar,
  ScrollView,
  Pressable,
} from "react-native";
import { Ionicons } from "@expo/vector-icons";
import { usePrayerTimes } from "@/lib/prayer-times/use-prayer-times";
import { PRAYERS } from "@/assets/constants/prayers";
import {
  fmtArabicDateDay,
  fmtArabicDateMonthAndNumberAndYear,
} from "@/lib/dates";
import { usePrayerTimesStore } from "@/store/prayerTimesStore";
const PrayerTimesScreen = () => {
  const { days, markPrayerAsPrayed } = usePrayerTimesStore();

  const { isLoading, error, formatted, next } = usePrayerTimes();
  console.log(formatted?.fajr);
  const [selectedDate, setSelectedDate] = useState(() => new Date());

  // Find the selected day's prayers
  const selectedDay = days.find(
    (day) => new Date(day.date).toDateString() === selectedDate.toDateString()
  );

  const previousDay = () => {
    setSelectedDate((prev) => {
      const newDate = new Date(prev);
      newDate.setDate(newDate.getDate() - 1);
      return newDate;
    });
  };

  const nextDay = () => {
    setSelectedDate((prev) => {
      const newDate = new Date(prev);
      newDate.setDate(newDate.getDate() + 1);
      return newDate;
    });
  };

  const handlePrayerPress = (prayerName: string) => {
    markPrayerAsPrayed(selectedDate, prayerName as any);
  };

  return (
    <SafeAreaView style={styles.container}>
      <StatusBar barStyle="light-content" backgroundColor="#00070A" />

      {/* Header */}
      <View style={styles.header}>
        <View style={styles.locationContainer}>
          <Text className="text-white text-3xl font-ibm-plex-arabic-medium text-right">
            الرغاية
          </Text>
          <Ionicons name="location-sharp" size={24} color="#00AEEF" />
        </View>
      </View>

      {/* Date Section */}
      <View className="flex-row-reverse justify-between items-center">
        <View className="flex-row-reverse gap-2">
          <Ionicons name="calendar-outline" size={22} color="#00AEEF" />
          <View className="justify-center items-end gap-2">
            <Text className="text-text-brand text-2xl mb-1 font-ibm-plex-arabic-semibold">
              {fmtArabicDateDay(selectedDate)}
            </Text>
            <Text className="text-white text-md font-ibm-plex-arabic-medium">
              {fmtArabicDateMonthAndNumberAndYear(selectedDate)}
            </Text>
          </View>
        </View>
        <View style={styles.dateSection}>
          <TouchableOpacity style={styles.navButton} onPress={nextDay}>
            <Ionicons name="chevron-back" size={24} color="#666" />
          </TouchableOpacity>

          <TouchableOpacity style={styles.navButton} onPress={previousDay}>
            <Ionicons name="chevron-forward" size={24} color="#666" />
          </TouchableOpacity>
        </View>
      </View>
      {/* Divider */}
      <View style={styles.divider} />

      {/* Prayer Times List */}
      <ScrollView
        style={styles.prayerTimesContainer}
        showsVerticalScrollIndicator={false}
      >
        {selectedDay?.prayers.map((prayer, index) => (
          <Pressable
            key={index}
            style={styles.prayerRow}
            onPress={() => handlePrayerPress(prayer.name)}
          >
            <View style={styles.prayerStatus}>
              {prayer.wasPrayed && (
                <Ionicons name="checkmark-circle" size={20} color="#4CAF50" />
              )}
              {prayer.shouldRing && (
                <Ionicons name="alarm" size={20} color="#00AEEF" />
              )}
            </View>

            <Text className="text-white text-lg font-ibm-plex-arabic-semibold text-right">
              {prayer.name}
            </Text>

            <View className="mr-2 ml-3">
              <Text className="text-white text-lg font-ibm-plex-arabic text-right">
                {new Date(prayer.time).toLocaleTimeString("en-US", {
                  hour: "2-digit",
                  minute: "2-digit",
                  hour12: false,
                })}
              </Text>
            </View>
          </Pressable>
        ))}
      </ScrollView>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: "#00070A",
    paddingHorizontal: 20,
    paddingTop: 60,
  },
  header: {
    alignItems: "flex-end",
    marginTop: 20,
    marginBottom: 80,
  },
  locationContainer: {
    flexDirection: "row",
    alignItems: "center",
    gap: 10,
  },

  locationText: {
    color: "white",
    fontSize: 24,
    fontWeight: "300",
    textAlign: "right",
  },
  dateSection: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    marginBottom: 20,
  },
  navButton: {
    padding: 10,
  },

  dayLabel: {
    color: "#4A90E2",
    fontSize: 18,
    fontWeight: "600",
    marginBottom: 8,
    textAlign: "center",
  },
  islamicDate: {
    color: "white",
    fontSize: 20,
    fontWeight: "400",
    marginBottom: 4,
    textAlign: "center",
  },
  gregorianDate: {
    color: "#888",
    fontSize: 16,
    fontWeight: "300",
    textAlign: "center",
  },
  divider: {
    height: 1,
    backgroundColor: "#333",
    marginVertical: 20,
  },
  prayerTimesContainer: {
    flex: 1,
  },
  prayerRow: {
    flexDirection: "row",
    justifyContent: "flex-end",
    alignItems: "center",
    paddingVertical: 16,
    borderBottomWidth: 1,
    borderBottomColor: "#333",
  },
  prayerStatus: {
    width: 40,
    alignItems: "center",
    justifyContent: "center",
    marginRight: 10,
  },
  soundIconContainer: {
    width: 40,
    alignItems: "center",
    justifyContent: "center",
  },
  prayerName: {
    color: "white",
    fontSize: 18,
    fontWeight: "400",
    flex: 1,
    textAlign: "center",
  },

  time: {
    color: "white",
    fontSize: 18,
    fontWeight: "400",
    marginRight: 4,
  },
  period: {
    color: "#888",
    fontSize: 16,
    fontWeight: "300",
  },
});

export default PrayerTimesScreen;
